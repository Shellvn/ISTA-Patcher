name: Build and Upload

on:
  push:
    branches: [ master, feat/**, release/** ]
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  pull_request:

jobs:
  build:
    name: 'Build'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        configuration: [ 'Release' ]
        runtime-identifier: [ 'win-x64', 'linux-x64', 'osx-x64', 'osx-arm64' ]

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET 8.x
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.x
        cache: true
        cache-dependency-path: ISTA-Patcher/packages.lock.json

    - name: Restore dependencies
      run: dotnet restore --locked-mode

    - name: Update version info
      if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
      run: |
        proj_file="ISTA-Patcher/ISTA-Patcher.csproj"
        version="<InformationalVersion>$(git rev-parse --short HEAD)</InformationalVersion>"
        sed -i "s#<InformationalVersion>[^<]*<\/InformationalVersion>#$version#g" $proj_file

    - name: Publish the application
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: true
      run: dotnet publish ISTA-Patcher --configuration ${{ matrix.configuration }} --runtime ${{ matrix.runtime-identifier }} --self-contained false

    - name: Copy files
      run: |
        cp -f LICENSE ISTA-Patcher/bin/${{ matrix.configuration }}/net8.0/${{ matrix.runtime-identifier }}/publish/LICENSE

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ISTA-Patcher-${{ matrix.runtime-identifier }}-${{ matrix.configuration }}
        retention-days: 30
        path: |
          ISTA-Patcher/bin/${{ matrix.configuration }}/net8.0/${{ matrix.runtime-identifier }}/publish/*
          !ISTA-Patcher/bin/${{ matrix.configuration }}/net8.0/${{ matrix.runtime-identifier }}/publish/*.pdb
          !ISTA-Patcher/bin/${{ matrix.configuration }}/net8.0/${{ matrix.runtime-identifier }}/publish/*.dbg

  glue:
    name: 'Build (Release, osx-universal)'
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Setup working directory
      run: |
        mkdir -p ISTA-Patcher/bin/Release/net8.0/osx-x64/publish
        mkdir -p ISTA-Patcher/bin/Release/net8.0/osx-arm64/publish

    - name: Setup lipo
      run: |
        curl -L -o /tmp/lipo https://github.com/konoui/lipo/releases/latest/download/lipo_Linux_amd64
        chmod +x /tmp/lipo
        sudo mv /tmp/lipo /usr/local/bin/lipo

    - name: Download x64 build
      uses: actions/download-artifact@v4
      with:
        name: ISTA-Patcher-osx-x64-Release
        path: ISTA-Patcher/bin/Release/net8.0/osx-x64/publish

    - name: Download arm64 build
      uses: actions/download-artifact@v4
      with:
        name: ISTA-Patcher-osx-arm64-Release
        path: ISTA-Patcher/bin/Release/net8.0/osx-arm64/publish

    - name: Glue the binary
      run: |
        mkdir -p ISTA-Patcher/bin/Release/net8.0/osx-universal/publish
        lipo -create ISTA-Patcher/bin/Release/net8.0/osx-x64/publish/ISTA-Patcher ISTA-Patcher/bin/Release/net8.0/osx-arm64/publish/ISTA-Patcher -output ISTA-Patcher/bin/Release/net8.0/osx-universal/publish/ISTA-Patcher
        cp -f ISTA-Patcher/bin/Release/net8.0/osx-x64/publish/patch-config.json ISTA-Patcher/bin/Release/net8.0/osx-universal/publish/patch-config.json

    - name: Copy files
      run: |
        cp -f ISTA-Patcher/bin/Release/net8.0/osx-x64/publish/LICENSE ISTA-Patcher/bin/Release/net8.0/osx-universal/publish/LICENSE

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ISTA-Patcher-osx-universal-Release
        retention-days: 30
        path: |
          ISTA-Patcher/bin/Release/net8.0/osx-universal/publish/*
          !ISTA-Patcher/bin/Release/net8.0/osx-universal/publish/*.pdb
          !ISTA-Patcher/bin/Release/net8.0/osx-universal/publish/*.dwarf
